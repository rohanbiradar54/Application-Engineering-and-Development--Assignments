/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.EmployerRole;

import Model.CourseDetails;
import Model.StudentDetails;
import Model.CourseDetailsDirectory;
import Model.EmployerDetails;
import Model.StudentDetailsDirectory;
import java.util.HashMap;
import java.util.Map;
import static java.util.Map.entry;
import javax.swing.JPanel;
import java.util.Map.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Naved
 */
public class TranscriptJPanel extends javax.swing.JPanel {
    private Map<String, Integer> studentCreditMap = new HashMap<>();
    private JPanel container;
    private CourseDetails coursedetails;
    private CourseDetailsDirectory courseDetailsDirectory;
//    private StudentDetailsDirectory studentdetailsdirectory;
    private CourseDetails selectedProfessor;
    private StudentDetails studentDetails;
    private Object entry;
//    private StudentDetails sd;
    private StudentDetailsDirectory studentDetailsDirectory;
    //private javax.swing.JTable tbltranscripts;
    //private Object entry;
    /**
     * Creates new form TranscriptJPanel
     */
//    public TranscriptJPanel() {
//        initComponents();
//        this.container = container;
//        this.courseDetailsDirectory = courseDetailsDirectory;
//        this.coursedetails = coursedetails;
//        this.studentdetailsdirectory=studentdetailsdirectory;  
////        this.studentDetails=sd;
//        populateTable2();
//    }

//    public TranscriptJPanel(JPanel container, CourseDetailsDirectory coursedetailsdirectory, CourseDetails coursedetails, StudentDetailsDirectory studentDetailsDirectory) {
////        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//          initComponents();
//          populateTable2();
//          this.studentDetailsDirectory = studentDetailsDirectory;
//          this.courseDetailsDirectory = coursedetailsdirectory;
//          this.container = container;
//          System.out.println(this.studentDetailsDirectory);
//          
//          tbltranscripts = new javax.swing.JTable();
//          populateTable2();
////          populateTable2();
////          System.out.println("kjsa kjd svk");
//          
//    }

    public TranscriptJPanel(JPanel container, CourseDetailsDirectory courseDetailsDirectory, CourseDetails courseDetails, StudentDetailsDirectory studentDetailsDirectory, EmployerDetails employerdetails) {
        initComponents();
          this.studentDetailsDirectory = studentDetailsDirectory;
            populateTable2();

//          this.courseDetailsDirectory = courseDetailsDirectory;
//          this.container = container;
//          System.out.println(this.studentDetailsDirectory);
//          
//          tbltranscripts = new javax.swing.JTable();
//          populateTable2();
        
        
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

//    public TranscriptJPanel(JPanel container, EmployerDetails employerdetails) {
////        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }
//
//    public TranscriptJPanel() {
//        System.out.println("AJSN");
////        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbltranscripts = new javax.swing.JTable();
        lbltranscript = new javax.swing.JLabel();
        btnCreditCalculate = new javax.swing.JButton();

        tbltranscripts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student Name", "Course Code", "Course Name", "Intake", "No. Of Credits"
            }
        ));
        jScrollPane1.setViewportView(tbltranscripts);

        lbltranscript.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbltranscript.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltranscript.setText("Manage Transcripts:");
        lbltranscript.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        btnCreditCalculate.setText("Calculate Credits");
        btnCreditCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreditCalculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbltranscript, javax.swing.GroupLayout.DEFAULT_SIZE, 928, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCreditCalculate)
                        .addGap(393, 393, 393))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lbltranscript)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnCreditCalculate)
                .addContainerGap(69, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreditCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreditCalculateActionPerformed
        // TODO add your handling code here:
//        StudentDetailsDirectory studentDetailsDirectory;
//        StudentDetails sd = StudentDetailsDirectory.
        
        Map <String, String> studentDetailsDirectory = new HashMap<>();
        studentDetails.countCredits(studentDetailsDirectory);
      //  System.out.println(entry.));
    }//GEN-LAST:event_btnCreditCalculateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreditCalculate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbltranscript;
    private javax.swing.JTable tbltranscripts;
    // End of variables declaration//GEN-END:variables

    private void populateTable2() {
        DefaultTableModel dtm = (DefaultTableModel) tbltranscripts.getModel();
        dtm.setRowCount(0);
//        StudentDetailsDirectory studentDetailsDirectory; 
        for (StudentDetails sd : studentDetailsDirectory.getStudentcourseList()){
//            System.out.println(studentDetailsDirectory);
            Object[] row = new Object[5];
            row[0]=sd.getStudentName();
            row[1]=sd.getCourseCode();
            row[2]=sd.getCourseName();
            row[3]=sd.getIntake();
            row[4]= "8" ; 

            dtm.addRow(row);    
        }
       
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    
//        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
//     public void countCredits (Map<String, String> studentDetailsDirectory){
//          for(Map.Entry<String, String> entry : studentDetailsDirectory.entrySet()) {
//             String StudentName = entry.getKey();
//             String[] CourseName = entry.getValue().split(",");
//             int regCourses = CourseName.length;
//             int credits = regCourses * 4;
//             studentCreditMap.put(StudentName, credits);
//           }
//          for (Map.Entry<String, Integer> entry : studentCreditMap.entrySet()){
//              System.out.println("Student:" + entry.getKey() +",Credit Hours: " +entry.getValue());
//          }
//        }


    }

