/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface;

import userManagement.User;
import userManagement.Directory;
import java.awt.CardLayout;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import static userInterface.CreateUser.hashedPassword;
import static userInterface.SearchandUpdateUserJPanel.hashPassword;

/**
 *
 * @author rohan
 */
public class UserLoginJPanel extends javax.swing.JPanel {

    
    private Directory userDirectory;
    private JPanel userProcessContainer;
    private User user;
    private javax.swing.JTable tblUsers;
    

    
    public UserLoginJPanel(JPanel userProcessContainer, Directory userDirectory, JTextField passwordField, JTextField usernameField, User user) {
    initComponents();
    this.userDirectory = userDirectory;
    this.userProcessContainer = userProcessContainer;
    this.user = user;
    tblUsers = new javax.swing.JTable();
    String result=""; 
     
    }
    public static String hashPassword(String password) {
        StringBuilder hash = new StringBuilder();
        try {
            MessageDigest sha = MessageDigest.getInstance("SHA-256");
            byte[] hashedBytes = sha.digest(password.getBytes());
            for (byte b : hashedBytes) {
                hash.append(String.format("%02x", b));
            }
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            // Handle the exception according to your needs
        }
        return hash.toString();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelUserLogin = new javax.swing.JLabel();
        labelUsername = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        textUsername = new javax.swing.JTextField();
        buttonLogin = new javax.swing.JButton();
        textPassword = new javax.swing.JTextField();
        buttonUpdate = new javax.swing.JButton();

        labelUserLogin.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        labelUserLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUserLogin.setText("User Login");

        labelUsername.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelUsername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelUsername.setText("Username :");
        labelUsername.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        labelPassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPassword.setText("Password :");
        labelPassword.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        textUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textUsernameActionPerformed(evt);
            }
        });

        buttonLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonLogin.setText("Login");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });

        textPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPasswordActionPerformed(evt);
            }
        });

        buttonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonUpdate.setText("Update Password");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelUserLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(textUsername))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(buttonLogin)
                                .addGap(18, 18, 18)
                                .addComponent(buttonUpdate)
                                .addGap(24, 24, 24))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(textPassword)))))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(labelUserLogin)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsername)
                    .addComponent(textUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPassword)
                    .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLogin)
                    .addComponent(buttonUpdate))
                .addContainerGap(177, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textUsernameActionPerformed

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed
        // TODO add your handling code here:                                      
    // Get the entered username and password
    String enteredUsername = textUsername.getText();
    String enteredPassword = hashPassword(textPassword.getText());

   
    User result = userDirectory.searchPassword(enteredPassword);

 
    if (result != null && enteredPassword.equals(result.getPassword())) {
      
        ViewUserJPanel panel = new ViewUserJPanel(userProcessContainer, userDirectory, textPassword, textUsername, user);
        userProcessContainer.add("ViewUserLoginJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    } else {
        
        JOptionPane.showMessageDialog(null, "Incorrect password or user does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
    
}

        
       
        
        
    }//GEN-LAST:event_buttonLoginActionPerformed
    
    private void textPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPasswordActionPerformed

   
    
    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        // TODO add your handling code here:
        
        {                                          
    // Get the new password from the text field
    String newPassword = hashPassword(textPassword.getText());
    User result = userDirectory.searchPassword(newPassword);

   
     if (result != null && newPassword.equals(result.getPassword())) {
   
        JOptionPane.showMessageDialog(null, "New password must be different from the old password.", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        
        userDirectory.updatePassword(user.getUsername(), newPassword);
        int selectedRowIndex = tblUsers.getSelectedRow();
        if (selectedRowIndex != -1) {
            tblUsers.setValueAt(newPassword, selectedRowIndex, 1); 
        }
        String np= user.getPassword();
         System.out.println(np);
         
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                user.setPassword(hashedPassword(textPassword.getText()));
                String np= user.getPassword();
                System.out.println(np);
//                String M=result.getPassword();
//                System.out.println(M);
//                throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }
        });
    
        
        
        
        
        JOptionPane.showMessageDialog(null, "User password updated successfully!");
        populateTable();
    }
     

    }//GEN-LAST:event_buttonUpdateActionPerformed
    
    }
    
    private void populateTable(){
    DefaultTableModel dtm = (DefaultTableModel) tblUsers.getModel();
    dtm.setRowCount(0);
    for (User user: userDirectory.getUserArrayList()){
        Object[] row = new Object[7];
        //row[0] = user;
        row[0] = user.getUsername();
        row[1] = user.getPassword();
        row[2] = user.getNUID();
        row[3] = user.getUserID();
        row[4] = user.getName();
        row[5] = user.getEmailID();
        row[6] = user.getContactNumber();
        
        dtm.addRow(row);
    }
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonLogin;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelUserLogin;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JTextField textPassword;
    private javax.swing.JTextField textUsername;
    // End of variables declaration//GEN-END:variables

//    private String hashedPassword(String password) {
//      return UserLoginJPanel.hashPassword(password);
//    }
}